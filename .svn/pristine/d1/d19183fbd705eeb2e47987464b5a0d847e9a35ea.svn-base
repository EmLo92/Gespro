/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dto;

import com.tsp.gespro.dao.*;
import com.tsp.gespro.factory.*;
import com.tsp.gespro.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class Ldap implements Serializable
{
	/** 
	 * This attribute maps to the column ID_LDAP in the ldap table.
	 */
	protected int idLdap;

	/** 
	 * This attribute represents whether the attribute idLdap has been modified since being read from the database.
	 */
	protected boolean idLdapModified = false;

	/** 
	 * This attribute maps to the column USUARIO in the ldap table.
	 */
	protected String usuario;

	/** 
	 * This attribute represents whether the attribute usuario has been modified since being read from the database.
	 */
	protected boolean usuarioModified = false;

	/** 
	 * This attribute maps to the column PASSWORD in the ldap table.
	 */
	protected String password;

	/** 
	 * This attribute represents whether the attribute password has been modified since being read from the database.
	 */
	protected boolean passwordModified = false;

	/** 
	 * This attribute maps to the column CONTRASENAS in the ldap table.
	 */
	protected String contrasenas;

	/** 
	 * This attribute represents whether the attribute contrasenas has been modified since being read from the database.
	 */
	protected boolean contrasenasModified = false;

	/** 
	 * This attribute maps to the column FIRMADO in the ldap table.
	 */
	protected int firmado;

	/** 
	 * This attribute represents whether the primitive attribute firmado is null.
	 */
	protected boolean firmadoNull = true;

	/** 
	 * This attribute represents whether the attribute firmado has been modified since being read from the database.
	 */
	protected boolean firmadoModified = false;

	/**
	 * Method 'Ldap'
	 * 
	 */
	public Ldap()
	{
	}

	/**
	 * Method 'getIdLdap'
	 * 
	 * @return int
	 */
	public int getIdLdap()
	{
		return idLdap;
	}

	/**
	 * Method 'setIdLdap'
	 * 
	 * @param idLdap
	 */
	public void setIdLdap(int idLdap)
	{
		this.idLdap = idLdap;
		this.idLdapModified = true;
	}

	/** 
	 * Sets the value of idLdapModified
	 */
	public void setIdLdapModified(boolean idLdapModified)
	{
		this.idLdapModified = idLdapModified;
	}

	/** 
	 * Gets the value of idLdapModified
	 */
	public boolean isIdLdapModified()
	{
		return idLdapModified;
	}

	/**
	 * Method 'getUsuario'
	 * 
	 * @return String
	 */
	public String getUsuario()
	{
		return usuario;
	}

	/**
	 * Method 'setUsuario'
	 * 
	 * @param usuario
	 */
	public void setUsuario(String usuario)
	{
		this.usuario = usuario;
		this.usuarioModified = true;
	}

	/** 
	 * Sets the value of usuarioModified
	 */
	public void setUsuarioModified(boolean usuarioModified)
	{
		this.usuarioModified = usuarioModified;
	}

	/** 
	 * Gets the value of usuarioModified
	 */
	public boolean isUsuarioModified()
	{
		return usuarioModified;
	}

	/**
	 * Method 'getPassword'
	 * 
	 * @return String
	 */
	public String getPassword()
	{
		return password;
	}

	/**
	 * Method 'setPassword'
	 * 
	 * @param password
	 */
	public void setPassword(String password)
	{
		this.password = password;
		this.passwordModified = true;
	}

	/** 
	 * Sets the value of passwordModified
	 */
	public void setPasswordModified(boolean passwordModified)
	{
		this.passwordModified = passwordModified;
	}

	/** 
	 * Gets the value of passwordModified
	 */
	public boolean isPasswordModified()
	{
		return passwordModified;
	}

	/**
	 * Method 'getContrasenas'
	 * 
	 * @return String
	 */
	public String getContrasenas()
	{
		return contrasenas;
	}

	/**
	 * Method 'setContrasenas'
	 * 
	 * @param contrasenas
	 */
	public void setContrasenas(String contrasenas)
	{
		this.contrasenas = contrasenas;
		this.contrasenasModified = true;
	}

	/** 
	 * Sets the value of contrasenasModified
	 */
	public void setContrasenasModified(boolean contrasenasModified)
	{
		this.contrasenasModified = contrasenasModified;
	}

	/** 
	 * Gets the value of contrasenasModified
	 */
	public boolean isContrasenasModified()
	{
		return contrasenasModified;
	}

	/**
	 * Method 'getFirmado'
	 * 
	 * @return int
	 */
	public int getFirmado()
	{
		return firmado;
	}

	/**
	 * Method 'setFirmado'
	 * 
	 * @param firmado
	 */
	public void setFirmado(int firmado)
	{
		this.firmado = firmado;
		this.firmadoNull = false;
		this.firmadoModified = true;
	}

	/**
	 * Method 'setFirmadoNull'
	 * 
	 * @param value
	 */
	public void setFirmadoNull(boolean value)
	{
		this.firmadoNull = value;
		this.firmadoModified = true;
	}

	/**
	 * Method 'isFirmadoNull'
	 * 
	 * @return boolean
	 */
	public boolean isFirmadoNull()
	{
		return firmadoNull;
	}

	/** 
	 * Sets the value of firmadoModified
	 */
	public void setFirmadoModified(boolean firmadoModified)
	{
		this.firmadoModified = firmadoModified;
	}

	/** 
	 * Gets the value of firmadoModified
	 */
	public boolean isFirmadoModified()
	{
		return firmadoModified;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof Ldap)) {
			return false;
		}
		
		final Ldap _cast = (Ldap) _other;
		if (idLdap != _cast.idLdap) {
			return false;
		}
		
		if (idLdapModified != _cast.idLdapModified) {
			return false;
		}
		
		if (usuario == null ? _cast.usuario != usuario : !usuario.equals( _cast.usuario )) {
			return false;
		}
		
		if (usuarioModified != _cast.usuarioModified) {
			return false;
		}
		
		if (password == null ? _cast.password != password : !password.equals( _cast.password )) {
			return false;
		}
		
		if (passwordModified != _cast.passwordModified) {
			return false;
		}
		
		if (contrasenas == null ? _cast.contrasenas != contrasenas : !contrasenas.equals( _cast.contrasenas )) {
			return false;
		}
		
		if (contrasenasModified != _cast.contrasenasModified) {
			return false;
		}
		
		if (firmado != _cast.firmado) {
			return false;
		}
		
		if (firmadoNull != _cast.firmadoNull) {
			return false;
		}
		
		if (firmadoModified != _cast.firmadoModified) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + idLdap;
		_hashCode = 29 * _hashCode + (idLdapModified ? 1 : 0);
		if (usuario != null) {
			_hashCode = 29 * _hashCode + usuario.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (usuarioModified ? 1 : 0);
		if (password != null) {
			_hashCode = 29 * _hashCode + password.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (passwordModified ? 1 : 0);
		if (contrasenas != null) {
			_hashCode = 29 * _hashCode + contrasenas.hashCode();
		}
		
		_hashCode = 29 * _hashCode + (contrasenasModified ? 1 : 0);
		_hashCode = 29 * _hashCode + firmado;
		_hashCode = 29 * _hashCode + (firmadoNull ? 1 : 0);
		_hashCode = 29 * _hashCode + (firmadoModified ? 1 : 0);
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return LdapPk
	 */
	public LdapPk createPk()
	{
		return new LdapPk(idLdap);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.tsp.gespro.dto.Ldap: " );
		ret.append( "idLdap=" + idLdap );
		ret.append( ", usuario=" + usuario );
		ret.append( ", password=" + password );
		ret.append( ", contrasenas=" + contrasenas );
		ret.append( ", firmado=" + firmado );
		return ret.toString();
	}

}
