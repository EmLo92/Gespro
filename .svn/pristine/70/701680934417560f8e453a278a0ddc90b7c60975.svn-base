/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import java.util.Date;
import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface ClienteDao
{
	/** 
	 * Inserts a new row in the cliente table.
	 */
	public ClientePk insert(Cliente dto) throws ClienteDaoException;

	/** 
	 * Updates a single row in the cliente table.
	 */
	public void update(ClientePk pk, Cliente dto) throws ClienteDaoException;

	/** 
	 * Deletes a single row in the cliente table.
	 */
	public void delete(ClientePk pk) throws ClienteDaoException;

	/** 
	 * Returns the rows from the cliente table that matches the specified primary-key value.
	 */
	public Cliente findByPrimaryKey(ClientePk pk) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_CLIENTE = :idCliente'.
	 */
	public Cliente findByPrimaryKey(int idCliente) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria ''.
	 */
	public Cliente[] findAll() throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_CLIENTE = :idCliente'.
	 */
	public Cliente[] findWhereIdClienteEquals(int idCliente) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Cliente[] findWhereIdEmpresaEquals(int idEmpresa) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_CATEGORIA = :idCategoria'.
	 */
	public Cliente[] findWhereIdCategoriaEquals(int idCategoria) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Cliente[] findWhereIdEstatusEquals(int idEstatus) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'NOMBRE_COMERCIAL = :nombreComercial'.
	 */
	public Cliente[] findWhereNombreComercialEquals(String nombreComercial) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CONTACTO = :contacto'.
	 */
	public Cliente[] findWhereContactoEquals(String contacto) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'TELEFONO = :telefono'.
	 */
	public Cliente[] findWhereTelefonoEquals(String telefono) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CALLE = :calle'.
	 */
	public Cliente[] findWhereCalleEquals(String calle) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'NUMERO = :numero'.
	 */
	public Cliente[] findWhereNumeroEquals(String numero) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'NUMERO_INTERIOR = :numeroInterior'.
	 */
	public Cliente[] findWhereNumeroInteriorEquals(String numeroInterior) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'COLONIA = :colonia'.
	 */
	public Cliente[] findWhereColoniaEquals(String colonia) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CODIGO_POSTAL = :codigoPostal'.
	 */
	public Cliente[] findWhereCodigoPostalEquals(String codigoPostal) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'PAIS = :pais'.
	 */
	public Cliente[] findWherePaisEquals(String pais) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ESTADO = :estado'.
	 */
	public Cliente[] findWhereEstadoEquals(String estado) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'MUNICIPIO = :municipio'.
	 */
	public Cliente[] findWhereMunicipioEquals(String municipio) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'CORREO = :correo'.
	 */
	public Cliente[] findWhereCorreoEquals(String correo) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'LATITUD = :latitud'.
	 */
	public Cliente[] findWhereLatitudEquals(double latitud) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'LONGITUD = :longitud'.
	 */
	public Cliente[] findWhereLongitudEquals(double longitud) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'FECHA_REGISTRO = :fechaRegistro'.
	 */
	public Cliente[] findWhereFechaRegistroEquals(Date fechaRegistro) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the criteria 'ID_USUARIO_ALTA = :idUsuarioAlta'.
	 */
	public Cliente[] findWhereIdUsuarioAltaEquals(int idUsuarioAlta) throws ClienteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the cliente table that match the specified arbitrary SQL statement
	 */
	public Cliente[] findByDynamicSelect(String sql, Object[] sqlParams) throws ClienteDaoException;

	/** 
	 * Returns all rows from the cliente table that match the specified arbitrary SQL statement
	 */
	public Cliente[] findByDynamicWhere(String sql, Object[] sqlParams) throws ClienteDaoException;

}
