/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface EmpresaPermisoAplicacionDao
{
	/** 
	 * Inserts a new row in the empresa_permiso_aplicacion table.
	 */
	public EmpresaPermisoAplicacionPk insert(EmpresaPermisoAplicacion dto) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Updates a single row in the empresa_permiso_aplicacion table.
	 */
	public void update(EmpresaPermisoAplicacionPk pk, EmpresaPermisoAplicacion dto) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Deletes a single row in the empresa_permiso_aplicacion table.
	 */
	public void delete(EmpresaPermisoAplicacionPk pk) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns the rows from the empresa_permiso_aplicacion table that matches the specified primary-key value.
	 */
	public EmpresaPermisoAplicacion findByPrimaryKey(EmpresaPermisoAplicacionPk pk) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public EmpresaPermisoAplicacion findByPrimaryKey(int idEmpresa) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria ''.
	 */
	public EmpresaPermisoAplicacion[] findAll() throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdEmpresaEquals(int idEmpresa) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_GESPRO = :accesoGespro'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoGesproEquals(short accesoGespro) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'NUM_LICENCIAS = :numLicencias'.
	 */
	public EmpresaPermisoAplicacion[] findWhereNumLicenciasEquals(int numLicencias) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_LICENCIA = :idLicencia'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdLicenciaEquals(int idLicencia) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'MAX_NUM_USUARIOS = :maxNumUsuarios'.
	 */
	public EmpresaPermisoAplicacion[] findWhereMaxNumUsuariosEquals(int maxNumUsuarios) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the specified arbitrary SQL statement
	 */
	public EmpresaPermisoAplicacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the specified arbitrary SQL statement
	 */
	public EmpresaPermisoAplicacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpresaPermisoAplicacionDaoException;

}
