/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface HorarioUsuarioDao
{
	/** 
	 * Inserts a new row in the horario_usuario table.
	 */
	public HorarioUsuarioPk insert(HorarioUsuario dto) throws HorarioUsuarioDaoException;

	/** 
	 * Updates a single row in the horario_usuario table.
	 */
	public void update(HorarioUsuarioPk pk, HorarioUsuario dto) throws HorarioUsuarioDaoException;

	/** 
	 * Deletes a single row in the horario_usuario table.
	 */
	public void delete(HorarioUsuarioPk pk) throws HorarioUsuarioDaoException;

	/** 
	 * Returns the rows from the horario_usuario table that matches the specified primary-key value.
	 */
	public HorarioUsuario findByPrimaryKey(HorarioUsuarioPk pk) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria 'ID_HORARIO = :idHorario'.
	 */
	public HorarioUsuario findByPrimaryKey(int idHorario) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria ''.
	 */
	public HorarioUsuario[] findAll() throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria 'ID_HORARIO = :idHorario'.
	 */
	public HorarioUsuario[] findWhereIdHorarioEquals(int idHorario) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria 'NOMBRE_HORARIO = :nombreHorario'.
	 */
	public HorarioUsuario[] findWhereNombreHorarioEquals(String nombreHorario) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public HorarioUsuario[] findWhereIdEmpresaEquals(int idEmpresa) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public HorarioUsuario[] findWhereIdEstatusEquals(int idEstatus) throws HorarioUsuarioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the horario_usuario table that match the specified arbitrary SQL statement
	 */
	public HorarioUsuario[] findByDynamicSelect(String sql, Object[] sqlParams) throws HorarioUsuarioDaoException;

	/** 
	 * Returns all rows from the horario_usuario table that match the specified arbitrary SQL statement
	 */
	public HorarioUsuario[] findByDynamicWhere(String sql, Object[] sqlParams) throws HorarioUsuarioDaoException;

}
