/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import java.util.Date;
import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface PosMovilEstatusDao
{
	/** 
	 * Inserts a new row in the pos_movil_estatus table.
	 */
	public PosMovilEstatusPk insert(PosMovilEstatus dto) throws PosMovilEstatusDaoException;

	/** 
	 * Updates a single row in the pos_movil_estatus table.
	 */
	public void update(PosMovilEstatusPk pk, PosMovilEstatus dto) throws PosMovilEstatusDaoException;

	/** 
	 * Deletes a single row in the pos_movil_estatus table.
	 */
	public void delete(PosMovilEstatusPk pk) throws PosMovilEstatusDaoException;

	/** 
	 * Returns the rows from the pos_movil_estatus table that matches the specified primary-key value.
	 */
	public PosMovilEstatus findByPrimaryKey(PosMovilEstatusPk pk) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'ID_MOVIL_ESTATUS = :idMovilEstatus'.
	 */
	public PosMovilEstatus findByPrimaryKey(int idMovilEstatus) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria ''.
	 */
	public PosMovilEstatus[] findAll() throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'ID_MOVIL_ESTATUS = :idMovilEstatus'.
	 */
	public PosMovilEstatus[] findWhereIdMovilEstatusEquals(int idMovilEstatus) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public PosMovilEstatus[] findWhereIdEmpresaEquals(int idEmpresa) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'ID_EMPLEADO = :idEmpleado'.
	 */
	public PosMovilEstatus[] findWhereIdEmpleadoEquals(int idEmpleado) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'FECHA_ESTATUS = :fechaEstatus'.
	 */
	public PosMovilEstatus[] findWhereFechaEstatusEquals(Date fechaEstatus) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'MENSAJE_ESTATUS = :mensajeEstatus'.
	 */
	public PosMovilEstatus[] findWhereMensajeEstatusEquals(String mensajeEstatus) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'LATITUD = :latitud'.
	 */
	public PosMovilEstatus[] findWhereLatitudEquals(double latitud) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'LONGITUD = :longitud'.
	 */
	public PosMovilEstatus[] findWhereLongitudEquals(double longitud) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the criteria 'IMAGEN_SEGUIMIENTO = :imagenSeguimiento'.
	 */
	public PosMovilEstatus[] findWhereImagenSeguimientoEquals(String imagenSeguimiento) throws PosMovilEstatusDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the specified arbitrary SQL statement
	 */
	public PosMovilEstatus[] findByDynamicSelect(String sql, Object[] sqlParams) throws PosMovilEstatusDaoException;

	/** 
	 * Returns all rows from the pos_movil_estatus table that match the specified arbitrary SQL statement
	 */
	public PosMovilEstatus[] findByDynamicWhere(String sql, Object[] sqlParams) throws PosMovilEstatusDaoException;

}
