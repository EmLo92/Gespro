/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface CompetenciaDao
{
	/** 
	 * Inserts a new row in the competencia table.
	 */
	public CompetenciaPk insert(Competencia dto) throws CompetenciaDaoException;

	/** 
	 * Updates a single row in the competencia table.
	 */
	public void update(CompetenciaPk pk, Competencia dto) throws CompetenciaDaoException;

	/** 
	 * Deletes a single row in the competencia table.
	 */
	public void delete(CompetenciaPk pk) throws CompetenciaDaoException;

	/** 
	 * Returns the rows from the competencia table that matches the specified primary-key value.
	 */
	public Competencia findByPrimaryKey(CompetenciaPk pk) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'ID_COMPETENCIA = :idCompetencia'.
	 */
	public Competencia findByPrimaryKey(int idCompetencia) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria ''.
	 */
	public Competencia[] findAll() throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'ID_COMPETENCIA = :idCompetencia'.
	 */
	public Competencia[] findWhereIdCompetenciaEquals(int idCompetencia) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Competencia[] findWhereIdEmpresaEquals(int idEmpresa) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Competencia[] findWhereIdEstatusEquals(int idEstatus) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Competencia[] findWhereNombreEquals(String nombre) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Competencia[] findWhereDescripcionEquals(String descripcion) throws CompetenciaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the competencia table that match the specified arbitrary SQL statement
	 */
	public Competencia[] findByDynamicSelect(String sql, Object[] sqlParams) throws CompetenciaDaoException;

	/** 
	 * Returns all rows from the competencia table that match the specified arbitrary SQL statement
	 */
	public Competencia[] findByDynamicWhere(String sql, Object[] sqlParams) throws CompetenciaDaoException;

}
