/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.tsp.sgfens.ws.bo;

import com.google.gson.Gson;
import com.tsp.gespro.bo.DispositivoMovilBO;
import com.tsp.gespro.bo.EmpresaBO;
import com.tsp.gespro.bo.UsuarioBO;
import com.tsp.gespro.dto.DatosUsuario;
import com.tsp.gespro.dto.Empresa;
import com.tsp.gespro.dto.Ubicacion;
import com.tsp.gespro.dto.Usuarios;
import com.tsp.gespro.jdbc.ResourceManager;
import com.tsp.gespro.jdbc.UbicacionDaoImpl;
import com.tsp.gespro.ws.request.UsuarioDtoRequest;
import com.tsp.gespro.ws.response.LoginUsuarioMovilResponse;
import com.tsp.gespro.ws.response.WsItemSucursal;
import com.tsp.gespro.ws.response.WsItemUbicacion;
import com.tsp.gespro.ws.response.WsItemUsuario;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;

/**
 *
 * @author HpPyme
 */
public class ConsultaWsBO {
    
    
     private final Gson gson = new Gson();
    private Connection conn = null;

    public Connection getConn() {
        if (this.conn==null){
            try {
                this.conn= ResourceManager.getConnection();
            } catch (SQLException ex) {}
        }else{
            try {
                if (this.conn.isClosed()){
                    this.conn = ResourceManager.getConnection();
                }
            } catch (SQLException ex) {}
        }
        return this.conn;
    }

    public void setConn(Connection conn) {
        this.conn = conn;
    }
    
    
    /**
     * Verifica si los datos de acceso del empleado son válidos
     * @param usuarioDtoRequest
     * @return AccionCatalogoResponse Respuesta compuesta por objeto complejo
     */
    public LoginUsuarioMovilResponse loginByUsuario(String usuarioDtoRequestJSON) {
        LoginUsuarioMovilResponse response;
        
        UsuarioDtoRequest usuarioDtoRequest = null;
        try{
            //Transformamos de formato JSON a objeto
            usuarioDtoRequest = gson.fromJson(usuarioDtoRequestJSON, UsuarioDtoRequest.class);
            
            response = this.loginByUsuario(usuarioDtoRequest);
        }catch(Exception ex){
            response = new LoginUsuarioMovilResponse();
            response.setError(true);
            response.setNumError(901);
            response.setMsgError("Los datos enviados no corresponden a los requeridos. No se pudo transformar de un cadena JSON a objetos. " + ex.toString());
            ex.printStackTrace();
        }
        
        return response;
    }
    
    
    
    /**
     * Verifica si los datos de acceso del empleado son válidos
     * @param usuarioDtoRequest
     * @return AccionCatalogoResponse Respuesta compuesta por objeto complejo
     */
    public LoginUsuarioMovilResponse loginByUsuario(UsuarioDtoRequest usuarioDtoRequest) {
        LoginUsuarioMovilResponse response = new LoginUsuarioMovilResponse();
         
        try {
            //Consultamos y obtenemos el ID de Empresa del Usuario
            UsuarioBO usuarioBO = new UsuarioBO(getConn());
            if (usuarioBO.login(usuarioDtoRequest.getUsuarioUsuario(), usuarioDtoRequest.getUsuarioPassword())) {
                if (usuarioBO.dispositivoAsignado(usuarioDtoRequest.getDispositivoIMEI())){
                    
                    DispositivoMovilBO dispositivoMovilBO = new DispositivoMovilBO(usuarioBO.getUser().getIdDispositivo(), getConn());
                    if (dispositivoMovilBO.getDispositivoMovil().getReporteRobo()==0){

                        
                        Usuarios usuarioDto = usuarioBO.getUser();
                        DatosUsuario datosUsuarioDto = usuarioBO.getDatosUsuario();
                        
                        WsItemUsuario wsItemUsuario= new WsItemUsuario();
                        
                        wsItemUsuario.setIdUsuario(usuarioDto.getIdUsuarios());
                        wsItemUsuario.setIdEmpresa(usuarioDto.getIdEmpresa());
                        wsItemUsuario.setIdEstatus(usuarioDto.getIdEstatus());
                        wsItemUsuario.setIdMovilEmpleadoRol(usuarioDto.getIdRoles());
                        wsItemUsuario.setLatitud(usuarioDto.getLatitud());
                        wsItemUsuario.setLongitud(usuarioDto.getLongitud());
                        wsItemUsuario.setNombre(datosUsuarioDto.getNombre());
                        wsItemUsuario.setApellidoPaterno(datosUsuarioDto.getApellidoPat());
                        wsItemUsuario.setApellidoMaterno(datosUsuarioDto.getApellidoPat());
                        wsItemUsuario.setTelefonoLocal(datosUsuarioDto.getTelefono());
                        wsItemUsuario.setNumEmpleado(usuarioDto.getNumEmpleado());
                        wsItemUsuario.setCorreoElectronico(datosUsuarioDto.getCorreo());
                        wsItemUsuario.setIdDispositivo(usuarioDto.getIdDispositivo());
                        wsItemUsuario.setPermisoVentaCredito(usuarioDto.getPermisoVentaCredito());
                        wsItemUsuario.setTrabajaFueraLinea(usuarioDto.getTrabajarFueraLinea());
                        wsItemUsuario.setClientesCodigoBarras(usuarioDto.getClientesCodigoBarras());
                        wsItemUsuario.setDistanciaObligatoria(usuarioDto.getDistanciaObligatorio());
                        wsItemUsuario.setPrecioCompra(usuarioDto.getPrecioDeCompra());
                        wsItemUsuario.setPermisoAccionesClientes(usuarioDto.getPermisoAccionesCliente());
                        
                        
                        response.setWsItemUsuario(wsItemUsuario);

                        //recuperamos datos de la empresa a la q pertenece el empleado
                        EmpresaBO empresaBO = new EmpresaBO(getConn());
                        Empresa empresaDto = empresaBO.findEmpresabyId(usuarioDto.getIdEmpresa());

                        WsItemSucursal wsItemSucursal = new WsItemSucursal();
                        WsItemUbicacion wsItemUbicacion= null;
                        Ubicacion ubicacionDto = null;

                        wsItemSucursal.setIdEmpresa((int)empresaDto.getIdEmpresa());
                        wsItemSucursal.setIdEmpresaPadre((int)empresaDto.getIdEmpresaPadre());
                        wsItemSucursal.setIdTipoEmpresa((int)empresaDto.getIdTipoEmpresa());
                        wsItemSucursal.setRfc(empresaDto.getRfc());
                        wsItemSucursal.setRazonSocial(empresaDto.getRazonSocial());
                        wsItemSucursal.setNombreComercial(empresaDto.getNombreComercial());                         
                        wsItemSucursal.setRegimenFiscal(empresaDto.getRegimenFiscal());                       
                      
                        
                                                
                        
                        //cargamos la ubicacion fiscal de esa sucursal                            
                        ubicacionDto = new UbicacionDaoImpl(getConn()).findByPrimaryKey(empresaDto.getIdUbicacionFiscal());

                        if (ubicacionDto!=null){
                            wsItemUbicacion = new WsItemUbicacion();

                            wsItemUbicacion.setCalle(ubicacionDto.getCalle());
                            wsItemUbicacion.setCodigoPostal(ubicacionDto.getCodigoPostal());
                            wsItemUbicacion.setColonia(ubicacionDto.getColonia());
                            wsItemUbicacion.setEstado(ubicacionDto.getEstado());
                            wsItemUbicacion.setIdUbicacionFiscal(ubicacionDto.getIdUbicacion());
                            wsItemUbicacion.setMunicipio(ubicacionDto.getMunicipio());
                            wsItemUbicacion.setNumExt(ubicacionDto.getNumExt());
                            wsItemUbicacion.setNumInt(ubicacionDto.getNumInt());
                            wsItemUbicacion.setPais(ubicacionDto.getPais());
                        }

                        wsItemSucursal.setUbicacion(wsItemUbicacion);                        
                        response.setWsItemSucursal(wsItemSucursal);

                        response.setError(false);
                    }else{
                        response.setError(true);
                        response.setNumError(901);
                        response.setMsgError("El dispositivo tiene reporte de robo.");
                    }
                }else{
                    response.setError(true);
                    response.setNumError(901);
                    response.setMsgError("El dispositivo no esta asignado al empleado.");
                }
            } else {
                response.setError(true);
                response.setNumError(901);
                response.setMsgError("Datos de acceso inválidos.");
            }
        } catch (Exception e) {
            response.setError(true);
            response.setNumError(902);
            response.setMsgError("Error al verificar login del empleado: " + e.toString());
            e.printStackTrace();
        }finally{
            try{ if (this.conn!=null) getConn().close(); }catch(Exception ex){}
        }
         
        return response;
    }
    
    
    
}
