/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.gespro.dao;

import com.tsp.gespro.dto.*;
import com.tsp.gespro.exceptions.*;

public interface RelacionConceptoEmbalajeDao
{
	/** 
	 * Inserts a new row in the relacion_concepto_embalaje table.
	 */
	public RelacionConceptoEmbalajePk insert(RelacionConceptoEmbalaje dto) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Updates a single row in the relacion_concepto_embalaje table.
	 */
	public void update(RelacionConceptoEmbalajePk pk, RelacionConceptoEmbalaje dto) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Deletes a single row in the relacion_concepto_embalaje table.
	 */
	public void delete(RelacionConceptoEmbalajePk pk) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns the rows from the relacion_concepto_embalaje table that matches the specified primary-key value.
	 */
	public RelacionConceptoEmbalaje findByPrimaryKey(RelacionConceptoEmbalajePk pk) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria 'ID_RELACION = :idRelacion'.
	 */
	public RelacionConceptoEmbalaje findByPrimaryKey(int idRelacion) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria ''.
	 */
	public RelacionConceptoEmbalaje[] findAll() throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria 'ID_RELACION = :idRelacion'.
	 */
	public RelacionConceptoEmbalaje[] findWhereIdRelacionEquals(int idRelacion) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public RelacionConceptoEmbalaje[] findWhereIdConceptoEquals(int idConcepto) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria 'ID_EMBALAJE = :idEmbalaje'.
	 */
	public RelacionConceptoEmbalaje[] findWhereIdEmbalajeEquals(int idEmbalaje) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the criteria 'CANTIDAD = :cantidad'.
	 */
	public RelacionConceptoEmbalaje[] findWhereCantidadEquals(double cantidad) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the specified arbitrary SQL statement
	 */
	public RelacionConceptoEmbalaje[] findByDynamicSelect(String sql, Object[] sqlParams) throws RelacionConceptoEmbalajeDaoException;

	/** 
	 * Returns all rows from the relacion_concepto_embalaje table that match the specified arbitrary SQL statement
	 */
	public RelacionConceptoEmbalaje[] findByDynamicWhere(String sql, Object[] sqlParams) throws RelacionConceptoEmbalajeDaoException;

}
